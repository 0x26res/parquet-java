package TestProtobuf;

option java_package = "parquet.protobuf.test";

// original dremel paper structures: Original paper used groups, not internal
// messages but groups were depricated.

message Document {
    required int64 DocId = 1;
    optional Links links = 32;
    repeated group Name = 24 {
        repeated Language name = 4;
        optional string url = 5;
    }
}

message Language {
    required string code = 12;
    optional string Country = 14;
}

message Links {
    repeated int64 Backward = 1;
    repeated int64 Forward = 2;
}


message AllInOneMessage {
    required string requiredString = 1;
    optional string optionalString = 2;
    repeated string repeatedString = 3;

    optional int32 optionalInt = 5;
    repeated int32 repeatedInt = 6;

    optional float optionalFloat = 8;
    repeated float repeatedFloat = 9;

    optional AllInOneSubMessage optionalMsg = 11;
    repeated AllInOneSubMessage repeatedMsg = 12;
}

message AllInOneSubMessage {
    optional string optionalString = 20;
    repeated string repeatedString = 30;

    optional int32 optionalInt = 50;
    repeated int32 repeatedInt = 60;

    optional float optionalFloat = 80;
    repeated float repeatedFloat = 90;
}


// Old:
message Link {
    required string url = 1;
    optional float weight = 2;
    optional bool internal = 3;
}

message InternalMessage {
    optional string str = 1;
    optional int32 i = 2;
}

message WebPage {
    required string url = 7;
    //repeated Link forwardLinks = 23;
    optional InternalMessage internalMsg = 55;
}

message RecursiveMessage {
    optional RecursiveMessage rec = 1;
}

message IntMessage {
    optional int32 int = 155;
}

message RepeatedInnerMessage {
    repeated IntMessage internal = 13;
}

message EnumMessage {
    enum Example {
        EnumValueA = 435;
        EnumValueB = 21;
        EnumValueC = 44;
    }
    optional Example enum = 1;
}

message StringMessage {
    optional string name = 1;
    optional string description = 2;
}

//Bug hunting
message Indexes{
    optional string field1 = 1;
    optional string field2 = 2;
    optional string field4 = 4;
    optional string field5 = 50;
}

//Bug hunting
message IntArrayMessage {
    repeated int32 intArray= 1;
    optional string secondField = 2;
}

message InnerArrayMessage{
    optional string innerValue = 1;
    optional string secondField = 2;
}

message MessageArrayMessage {
    repeated InnerArrayMessage msgArray= 1;
    optional string secondField = 2;
}






